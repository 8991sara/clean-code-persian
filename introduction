**این بخش نیاز به بازبینی دارد
عکس -----۰٫۱-------
کدام در کد شما را نشان میدهد؟ کدام در تیم یا شرکت شما را نشان میدهد؟ چرا ما در  ان اتاق هستیم؟ ایا این فقط  یک بررسی ساده کد
است  یا یک سری مشکلات را مدت کمی بعد از اجرا پیدا خواهیم کرد؟ ایا به خاطر وحشت از خراب شدن کدی که فکر میکردیم درست است ان را دیباگ میکنیم؟ایا مشتری ها برنامه ما را ترک میکنندو مدیران در  گردن ما نفس میکشند؟ چطور مطمعن شویم لحظات سخت پشت در درست قرار گرفته ایم؟ پاسسخ این است: مهارت.
یادگیری مهارت از دو بخش تشکیل شده است: دانش و کار. شما باید اصول , الگو ها , تمرین ها و شیوه های اکتشافی که یک هنرمند میداند را یاد بگیرید و شما باید ان دانش را با انگشتان, چشم ها, دل و روده تان حس کنید و سخت کار کنید و تمرین کنید.
من میتوانم به شما فیزیک راندن یک دوچرخه را یاد بدهم. در واقع , ریاضیات کلاسیک سر راست است. جا‌‌ذبه, اصطکاک, تکانه زاویه ای , مرکز جرم و غیره را میتوان در کمتر از یک صفحه پر از معادلات نشان داد. با توجه به فرمول ها میتوانم به شما ثابت کنم که دوچرخه سواری عملی است و میتوانم همه دانشی که برای عملی کردن ان نیاز دارید را یاد بدهم. ولی هنوز در اولین دوچرخه سواری ات زمین خواهی خورد.
کد نویسی تفاوتی ندارد.ما میتوانیم همه اصول کد تمیز را یادداشت کنیم و بعد به شما اطمینان دهیم که ان کار را انجام دهید(به عبارتی بگذاریم وقتی سوار دوچرخه شدید زمین بخورید), اما کدام معلم این کار را میکند.
 نه,این راهی نیست که این کتاب میخواهد برود.
یادگیری نوشتن کد تمیز کار سختی است. به بیشتر از دانستن اصول و الگو ها نیاز دارد.
باید عرق بریزی. باید تمرین کنی شکست هایت را ببینی. باید کار های دیگران و شکست هایشان را ببینی. باید ببینی چطور زمین میخورند و دوباره بلند میشوند.
باید ببینی چطور از شکست هایشان عذاب میکشند و چه قیمتی برای تصمیمات بد شان پرداخته اند.
اماده باشید که حین خواندن این کتاب سخت تمرین کنید. این یک کتاب تفریحی نیست که بتوانید انرا در هواپیما بخوانید و قبل از فرود انرا تمام کنید. این کتاب شما را به کار وادار میکند , سخت کار کن. چه نوع کاری را انجام خواهی داد؟ باید کد بخوانید - مقدار زیادی کد. و شما را به چالش میکشد تا در مورد اینکه چه چیز ان کد خوب است و چه بدی هایی دارد فکر کنید. از ما خواسته میشود که بخش ها (modules) را از هم جدا و دوباره به هم وصل کنیم. برای این کار زمان و تلاش صرف خواهد شد ولی ما فکر میکنیم که ارزش انرا دارد.
ما این کتاب را به سه بخش تقسیم کرده ایم.اولین فصل اصول, الگو ها و تمرین نوشتن کد تمیز را در بر میگیرد. تعداد کمی کد در این فصل قرار دارد که خواندن انها چالش برانگیز است. انها شما را برای خواندن فصل دوم اماده خواهد کرد. اگر پس از خواندن فصل اول کتاب را کنار گذاشتید, موفق باشید!
در بخش دوم کتاب کار سخت تر است. این فصل از چند بخش با پیچیدگی افزایشی تشکیل شده است.هر بخش تمرین تمیزکردن کمی کد است-تبدیل کردن کدی که مشکلاتی دارد به کدی که مشکلات کمتری دارد. جزییات این فصل سخت است. باید دایم بین کتاب و یادداشت برداری جابه جا شوید. باید کدی که با ان کار میکنیم را آنالیز و درک کنید و برای هر تغییری که در کد ایجاد میکنیم استدلال کنید.کمی زمان بگذارید چون این کار باید چند روز زمان ببرد.
بخش سوم کتاب نتیجه گیری نهایی است. این فصل شامل لیستی از اکتشافات و بو هایی (منظور چیز هایی که کد را از حالت تمیز بودن خارج میکند که به بوی بد شهرت دارد) است که هنگام یادگیری جمع اوری شده است. همینطور که پیش میرویم و کد ها را تمیز میکنیم, برای هر کاری که انجام میدهیم تحت عنوان بو یا اکتشاف نکته برداری میکنیم. ما تلاش میکنیم واکنش خودمان را نسبت به کدی که خوانده ایم و تغییر داده ایم درک کنیم, و سخت تلاش کرده ایم که انچه احساس کرده ایم , انچه انجام داده ایم و دلیل ان را ضبط کنیم. نتیجه دانشی پایه است که به درک طرز تفکر ما هنگام نوشتن, خواندن و تمیز کردن کمک میکند.
اگر شمابخش های فصل دوم را به دقت نخوانید این دانش پایه ارزش محدودی خواهد داشت. در ان بخش های اموزشی هر تغییری که ایجاد کرده ایم را به دقت و با ارجاع به اکتشافات به طور کامل تشریح کرده ایم. این ارجاعات در کروشه مثل این ظاهر میشوند:[H22] . این به شما اجازه میدهد متنی که در ان از اکتشافات استفاده شده را ببینید. این نه تنها خودش اکتشاف نیست بلکه بسیار ارزشمند است, این رابطه ان اکتشافات و تصمیمات پراکنده ای که حین تمیز کردن کد در بخش های اموزشی گرفته ایم را مشخص  میکند.
برای کمک بیشتر در رابطه با این روابط ما مرجع در پایان کتاب قرار داده ایم که شماره صفحه هر ارجاع را نمایش میدهد. میتوانید از ان برای دیدن مکانی که هر اکتشاف ظاهر شده استفاده کنید.
اگر فصل اول و سوم را بخوانید و از بخش های اموزشی صرف نظر کنید پس بهتر است یک کتاب تفریحی در باره نوشتن نرم افزار خوب بخوانید.اما اگر برای بخش های اموزشی در فصل دوم وقت بگذارید, هر قدم کوچک را دنبال کنید

